version: 0.2

phases:
  install:
    commands:
      - apt-get install curl
      - curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64
      - curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.121.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
      - chmod 700 get_helm.sh
      - ./get_helm.sh
      - curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.13/2022-10-31/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
  pre_build:
    commands:
      - echo $EFS_ID
      - echo $CLUSTER_NAME
      - helm repo add eks https://aws.github.io/eks-charts
      - helm repo add gitrepo https://honeyo7.github.io/githelmchartrepo/
      - helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver/
      - helm repo update
  build:
    commands:
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::285461333388:role/kubectlRole --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks --region us-east-1 update-kubeconfig --name ec2-eks-demo
      - kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
      - eksctl utils associate-iam-oidc-provider --region=us-east-1 --cluster=$CLUSTER_NAME --approve
      - eksctl create iamserviceaccount --cluster=$CLUSTER_NAME --region=us-east-1 --namespace=kube-system --name=aws-load-balancer-controller --role-name "AmazonEKSLoadBalancerControllerRole" --attach-policy-arn=arn:aws:iam::285461333388:policy/ALBIngressControllerIAMPolicy --approve
      - helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system  --set clusterName=$CLUSTER_NAME --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller --set image.repository=602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-load-balancer-controller
      - eksctl create iamserviceaccount  --cluster=$CLUSTER_NAME --region=us-east-1 --namespace=kube-system --name=cluster-autoscaler  --attach-policy-arn=arn:aws:iam::285461333388:policy/AmazonEKSClusterAutoscalerPolicy-ec2-eks-demo --override-existing-serviceaccounts --approve
      - curl -o cluster-autoscaler-autodiscover.yaml https://raw.githubusercontent.com/kubernetes/autoscaler/master/cluster-autoscaler/cloudprovider/aws/examples/cluster-autoscaler-autodiscover.yaml
      - sed -i.bak -e "s|<YOUR CLUSTER NAME>|$CLUSTER_NAME|" ./cluster-autoscaler-autodiscover.yaml
      - kubectl apply -f cluster-autoscaler-autodiscover.yaml
      - helm upgrade --install aws-efs-csi-driver --namespace kube-system aws-efs-csi-driver/aws-efs-csi-driver
      - helm upgrade --install tasks-demo --namespace default gitrepo/tasks-demo --set tasks.volumeEfs.volumeHandle=$EFS_ID